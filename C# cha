using System;
using IdentityModel;
using IdentityModel.Client;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Adform_csharp_cha
{
    class Program
    {
        

        static void Main(string[] args)
        {
           // request();
            kazkas();
            Console.WriteLine("Laukiu");

            while (true)
            {

            }

   
        }

        static async void request(string address, string grant)
        {
            //string address = "https://id.adform.com/sts/connect/token";
            string scope = "https://api.adform.com/scope/eapi";
            string clientID = "sellside.apiteam@tests.adform.com";
            string clientSecret = "xPDUpHFZHuobERbKVjVxPujndfyg4C6KLDItwLwK";
            var stilius = new AuthenticationStyle();
            stilius = AuthenticationStyle.PostValues;

            var client = new TokenClient(address: address, clientId:clientID, clientSecret: clientSecret, style: stilius);
           // client.BasicAuthenticationHeaderStyle = BasicAuthenticationHeaderStyle.Rfc6749;
            var response = await client.RequestClientCredentialsAsync(scope);
            var something = response.AccessToken;
            Console.WriteLine(something.Length);
        }

        static async void kazkas()
        {
            var randukazka = new DiscoveryClient("https://id.adform.com/sts/.well-known/openid-configuration");
            var doc = await randukazka.GetAsync();

            var tokenEndpoint = doc.TokenEndpoint;
            var keys = doc.KeySet.Keys;
            string ad = doc.TokenEndpoint;
            var grand = doc.GrantTypesSupported.ElementAt(1);

            request(ad,grand);
            foreach (var key in keys)
            {
                Console.WriteLine(key.Use);
            }
        }

      
    }
}
